# OATS - Open Attendance Service

This application is a software as a service (SAAS) that provides a system to maintain a company's attendance record.

# Model and Database

We have 6 ActiveRecord model:
1.  Company
    Stores company's informations (name, address, contact).

2.  Office
    Stores location and acceptable range (for checkin/checkout). An office belongs to one company and a company can have many offices.

3.  User
    Stores user's informations such as name and email. This model is also used for authentication and authorization, so this model also stores password and role. There are 4 roles:
    a.  Admin, represented by character '0'
    b.  Owner, represented by character '1'
    c.  HR, represented by character '2'
    d.  Employee, represented by character '3'
    An user belongs to one office and a office can have many users.

4.  Ownership
    Stores the relationship between a company and its owner which is a user. A company belongs to one owner and an owner can only have one company.

5.  Worktime
    Stores a pair of checkin and checkout time + place. Worktime belongs to a user and a user can have many worktimes. 

6.  Billing
    Stores a company's bills. A new bill can only be created by an admin. A company can have many billings.

7.  Presence
    Stores wether an employee is checked in or absence on a particular day. Belongs to user.

For database, we use SQLite3 for development and PostgreSQL for production in Heroku.

# Controller
Our controllers are mostly RESTful, though there are some exception.
1.  Application
    Application controller is mainly used to rescue from several exceptions thrown by Rails. It also handles redirection.

2.  Companies
    Available only for admins.
    index - Views all registered companies. 
    edit - Views the company edit page.
    update - Saves company information that is edited in edit page.
    update_batch - Saves companies information that is edited in index page.
    show - Views the company information
    destroy - Deletes a company.

3.  Offices
    Available for the owner of a company.
    create - Create a new office for the company
    edit - Views the office edit page.
    update - Saves office information that is edited in edit page.
    destroy - Deletes an office.

4.  Users
    Some are avaiable for all roles, some are only for owner or HR of a company.
    index - Available for owners and HRs. Views all employees in their company.
    add - Available for owners and HRs. Add one employee in their company.
    show - Available for all. Views employee information.
    destroy - Available for owners and HRs. Deletes a employee (HR cannot delete another HR).
    edit - Available for all. Shows edit user page.
    update - Available for all. Saves user information that is edited in edit page.
    update_batch - Available for owners and HRs. Saves user information that is edited in index page.
    change_password - Available for all. Change current user's password.
    mobile_signin - Available for all. Returns access token if successfully authenticated.

5.  Worktimes
    Available for all, with different things to show.
    index - Views either performance graph of an user or show worktimes of all employees in a company.
    create - Create a new worktime and presence (checkin), validates location.
    update - Update an existing worktime and presence (checkout), validates location.
    mobile_graph - Send JSON containing performance graph data.
    create_absence - Create a new worktime and presence containing an absence note. Does not validate location.

6.  Billings
    Available for admin, owner can only views their own.
    index - Views all latest bills for admin, or for owner their own only.
    create - Create a new bill.
    update - Update payment date for a bill that is paid by its company.
    destroy - Delete a bill.

7.  Registrations
    create - Create a new user (as an owner), his/her company, and its first office.

8.  Static Pages
    Containing static pages such as about and help.

9.  User Imports
    Handles user batch add from files.

# Gems and Libraries
1.  Devise
    For user authentication. We use database_authenticatable, registerable, recoverable, rememberable, and validatable modules.
2.  CanCan
    For user authorization.
3.  Twitter Bootstrap
    For clean, simple, but stylish looks.
4.  will_paginate
    For pagination in tables.
5.  Roo
    For Excel format used in importing.
6.  JQuery
    Used mostly for AJAX.
7.  Capybara + Faker
    For testing purposes.

# Mobile API
URL : https://oatsdailybeta.herokuapp.com

##Sign in
Do HTTP Request POST containing email and password to /mobile_signin.
Response in JSON : { code:xxx, access_token:xxx... }
code => 200: successfully authenticated
        501: wrong password
        502: wrong email, or the user didn't exist
        503: problem in accessing the database
access_token => 72 digit token used for other actions later. Can be stored indefinitely, because it will never be changed in the database.

##Checkin
Do HTTP Request POST containing access_token, latitude, and longitude to /checkin.
Response in JSON : { code:xxx, time:xxx }
code => 200: success
        501: wrong access token, or the user didn't exist
        502: wrong location for this action
        503: problem in accessing the database
        504: the user are already checked in.
time => Date (yyyy-mm-dd), Time (hh:mm:ss), and GMT offset

##Checkout
Do HTTP Request POST containing access_token, latitude, and longitude to /checkout.
Response in JSON : { code:xxx, time:xxx }
code => 200: success
        501: wrong access token, or the user didn't exist
        502: wrong location for this action
        503: problem in accessing the database
        504: the user are not checked in yet. 
time => Date (yyyy-mm-dd), Time (hh:mm:ss), and GMT offset

##Performance Graph
Do HTTP Request POST containing access_token, from (dd-mm-yyyy), and to (dd-mm-yyyy) to /mobile_graph.
Response in JSON : { code:xxx, performance:[ { date:xx, worktime:x }, ... ] }
code => 200: success
        501: wrong access token, or the user didn't exist
        502: wrong from and to parameters
        503: problem in accessing the database
date => dd-mm-yyyy
worktime => x (in hours)
